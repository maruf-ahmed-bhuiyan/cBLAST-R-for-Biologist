speed <- speed -11
} else {
print("Slow down!")
speed <- speed - 6
}
}
# Initialize the speed variable
speed <- 64
# The linkedin vector has already been defined for you
linkedin <- c(16, 9, 13, 5, 2, 17, 14)
l <- linkedin
l <- linkedin
# Loop version 1
for (i in l){
print(i)
}
# Loop version 2
for ( i in 1:length(l)){
print(l[i])
}
# The nyc list is already specified
nyc <- list(pop = 8405837,
boroughs = c("Manhattan", "Bronx", "Brooklyn", "Queens", "Staten Island"),
capital = FALSE)
nyc
# Loop version 1
for ( i in nyc){
print(i)
}
# Loop version 1
for ( i in nyc){
print(i)
}
# Loop version 2
ll <- length(nyc)
for (i in 1:ll){
print(nyc[[i]])
}
source('~/Desktop/cBALST_R/Day 3-3 July 2020/Part6.R', echo=TRUE)
source('~/Desktop/cBALST_R/Day 3-3 July 2020/Part7.R', echo=TRUE)
x <- "habib"
is.character(x)
if (x > 0){
print("x is a positive number")
} else if (x < 0){
print("x is a negative number")
} else if (class(x) == "character"){
print("please write a valid number")
}
BiocManager::install("airway")
library("airway")
data("airway")
head(airway)
setwd("~/Desktop/cBALST_R/Day 4-4 July 2020")
?read.csv
data <- read.csv("houses_new.csv")
?read.csv
View(data)
head(data)
str(data)
str(iris)
iris <- data(iris)
str(iris)
plot(iris$Sepal.Length, iris$Petal.Length,
xlab = "Sepal Length",
ylab = "Petal Length",
main = "Sepal Length vs Petal Length")
iris <- data.frame(data(iris))
str(iris)
plot(iris$Sepal.Length, iris$Petal.Length,
xlab = "Sepal Length",
ylab = "Petal Length",
main = "Sepal Length vs Petal Length")
data(iris)
str(iris)
plot(iris$Sepal.Length, iris$Petal.Length,
xlab = "Sepal Length",
ylab = "Petal Length",
main = "Sepal Length vs Petal Length")
plot(iris$Sepal.Length, iris$Petal.Length,
xlab = "Sepal Length",
ylab = "Petal Length",
main = "Sepal Length vs Petal Length",
col="cyan3", pch=16)
hist(iris$Sepal.Length)
hist(iris$Sepal.Length, border = 2)
hist(iris$Sepal.Length, border = 5)
?colorbrew
hist(iris$Sepal.Length, xlab ="Sepal Length", main = "Distribution")
hist(iris$Sepal.Length, xlab ="Sepal Length", main = "Distribution", col = "red")
#Boxplot
boxplot(iris$Species~iris$Sepal.Length)
#Boxplot
boxplot(iris$Sepal.Width~iris$Sepal.Length)
require(ggplot2)
ggplot(iris) +
aes(iris$Sepal.Length, iris$Petal.Length)
ggplot(iris) +
aes(Sepal.Length,Petal.Length)
ggplot(iris) +
aes(Sepal.Length,Petal.Length)+
geom_boxplot()
ggplot(iris) +
aes(Sepal.Length,Petal.Length)+
geom_point()
ggplot(iris, aes(Sepal.Length,Petal.Length)) +
geom_point()
ggplot(iris, aes(Sepal.Length,Petal.Length, col=species)) +
geom_point()
ggplot(iris, aes(Sepal.Length,Petal.Length, col= species)) +
geom_point()
ggplot(iris, aes(Sepal.Length,Petal.Length, col= Species, shape = Species)) +
geom_point()
ggplot(iris, aes(Sepal.Length,Petal.Length, col= Species, shape = Species)) +
geom_point() +
theme_bw()
ggplot(iris, aes(Sepal.Length,Petal.Length, col= Species, shape = Species)) +
geom_point() +
theme_classic()
ggplot(iris, aes(Sepal.Length,Petal.Length, col= Species, shape = Species)) +
geom_point() +
theme_bw()
house_new <- read.csv("houses_new.csv")
str(house_new)
plot(house_new)
ggplot(data = house_new ) +
geom_histogram(mapping = aes(x = price), bins = 200)
ggplot(data = house_new ) +
geom_histogram(mapping = aes(x = price), bins = 400)
ggplot(data = house_new ) +
geom_histogram(mapping = aes(x = price), bins = 1000)
ggplot(data = house_new ) +
geom_histogram(mapping = aes(x = price), bins = 10)
ggplot(data = house_new ) +
geom_histogram(mapping = aes(x = price), bins = 50)
ggplot(data = house_new ) +
geom_histogram(mapping = aes(x = price), bins = 50, fill = "cyan3")
ggplot(data = house_new ) +
geom_histogram(mapping = aes(x = price), bins = 50, fill = "cyan3", col = "blue")
ggplot(data = house_new) +
geom_histogram(
mapping = aes(x = price),
bins = 50,
fill = "cyan3",
col = "black")
ggplot(data = house_new) +
geom_histogram(
mapping = aes(x = price),
bins = 50,
fill = "royalblue",
col = "black")
ggplot(data = house_new) +
geom_histogram(
mapping = aes(x = price),
bins = 50,
fill = "royalblue3",
col = "black")
ggplot(data = house_new) +
geom_histogram(
mapping = aes(x = price, fill= air_cond2),
bins = 50,
fill = "royalblue3",
col = "black")
ggplot(data = house_new) +
geom_histogram(
mapping = aes(x = price, fill= air_cond2),
bins = 50,
fill = "royalblue3",
col = "black")
ggplot(data = house_new) +
geom_histogram(
mapping = aes(x = price, fill= house_new$air_cond2),
bins = 50,
fill = "royalblue3",
col = "black")
ggplot(data = house_new, mapping = aes(x = price, fill= house_new$air_cond2)) +
geom_histogram(
bins = 50,
fill = "royalblue3",
col = "black")
# Barplot
ggplot(data = house_new, aes(x = waterfront2, fill = air_cond2)) +
geom_bar(position = "fill")
# Barplot
ggplot(data = house_new, aes(x = waterfront2, fill = air_cond2)) +
geom_bar()
ggplot(data = house_new, aes(x = waterfront2, fill = air_cond2)) +
geom_bar(position = "fill")
# Frequency Polygon
ggplot(data = house_new, aes(x = price, col = air_cond2)) +
geom_freqpoly(bins=100)
ggplot(data = house_new, aes(x= factor(x = rooms, y = price))) +
geom_boxplot()
ggplot(data = house_new, aes(x= factor(x = rooms, y = house_new$price))) +
geom_boxplot()
ggplot(data = house_new, aes(x= factor(house_new$rooms), y = house_new$price)) +
geom_boxplot()
ggplot(data = house_new, aes(x= factor(house_new$rooms), y = house_new$price, fill =air_cond2)) +
geom_boxplot()
# Smooth line
ggplot(data = house_new, aes(x =living_area, y = price)) + goem_smooth
# Smooth line
ggplot(data = house_new, aes(x =living_area, y = price)) + geom_smooth
# Smooth line
ggplot(data = house_new, aes(x =living_area, y = price)) +
geom_smooth()
# Linear model
ggplot(data = house_new, aes(x = living_area, y = price)) + geom_point()
# Linear model
ggplot(data = house_new, aes(x = living_area, y = price)) + geom_point() +geom_abline()
# Linear model
ggplot(data = house_new, aes(x = living_area, y = price)) + geom_point() +geom_smooth(mehtod = "lm", se = F)
# Linear model
ggplot(data = house_new, aes(x = living_area, y = price)) + geom_point() +geom_smooth(mehtod = "lm", se = T)
# Linear model
ggplot(data = house_new, aes(x = living_area, y = price)) + geom_point() +geom_smooth(method = "lm", se = T)
# Linear model
ggplot(data = house_new, aes(x = living_area, y = price)) + geom_point() +geom_smooth(method = "lm", se = F)
# Linear model
ggplot(data = house_new, aes(x = living_area, y = price)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
facet_grid(~air_cond2)
#scatter plot bivariate analysis with petal length and petal width
plot(x = iris$Petal.Length, y = iris$Petal.Length)
#scatter plot bivariate analysis with petal length and petal width
plot(x = iris$Petal.Length, y = iris$Petal.Width)
#Time to modify labels saying x axis as petal length and y axis as petal width
plot(x = iris$Petal.Length, y = iris$Petal.Width, xlab = "Petal Lenth", ylab = "Petal Width")
#Add color to the plot
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
xlab = "Petal Lenth",
ylab = "Petal Width",
col = "cyan3"
)
#Add color to the plot
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
xlab = "Petal Lenth",
ylab = "Petal Width",
col = "royalblue3"
)
##pch determines the shape of the plot
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
xlab = "Petal Lenth",
ylab = "Petal Width",
col = "royalblue3",
pch = 16
)
##pch determines the shape of the plot
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
xlab = "Petal Lenth",
ylab = "Petal Width",
col = "royalblue3",
pch = 24
)
##pch determines the shape of the plot
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
xlab = "Petal Lenth",
ylab = "Petal Width",
col = "royalblue3",
pch = 28
)
##pch determines the shape of the plot
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
xlab = "Petal Lenth",
ylab = "Petal Width",
col = "royalblue3",
pch = 26
)
##pch determines the shape of the plot
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
xlab = "Petal Lenth",
ylab = "Petal Width",
col = "royalblue3",
pch = 18
)
#Univariate analysis
#Histogram with petal width
hist(x = iris$Petal.Width)
#Univariate analysis
#Histogram with petal width
?hist()
hist(x = iris$Petal.Width)
#boxplot (we can check how a continuous variable changes with categorical variable). Please check how
#petal length chages across specis
?boxplot
boxplot(iris$Petal.Length ~ iris$Species)
library(ggplot2)
#Scatter plot with petal length and petal width
ggplot(data = iris ) +
geom_ (mapping = aes(x = Petal.Length , y = Petal.Width))
#Scatter plot with petal length and petal width
ggplot(data = iris ) +
geom_point (mapping = aes(x = Petal.Length , y = Petal.Width))
house <- read.csv("houses_new.csv", header = TRUE)
house <- read.csv("houses_new.csv", header = TRUE)
house
##histogram (Fill as attribute)
ggplot(data = house_new, aes(x = house_new$price)) + geom_histogram()
ggplot(data = house_new, aes(x = house_new$price)) + geom_histogram(bins = 50)
c <-
ggplot(data = house_new, aes(x = house_new$price)) +
geom_histogram(bins = 50, fill = "palegreen3")
d <-
ggplot(data = house_new, aes(x = house_new$price)) +
geom_histogram(bins = 50, fill = "palegreen3", col = "black")
##histogram (Fill as attribute)
ggplot(data = house_new, aes(x = house_new$price)) + geom_histogram()
ggplot(data = house_new, aes(x = house_new$price)) + geom_histogram(bins = 50)
ggplot(data = house_new, aes(x = house_new$price)) +
geom_histogram(bins = 50, fill = "palegreen3")
ggplot(data = house_new, aes(x = house_new$price)) +
geom_histogram(bins = 50, fill = "palegreen3", col = "black")
##Position, use fill as an aesthetic
ggplot(data = house_new, aes(x = house_new$price,
fill = house_new$air_cond2)) +
geom_histogram()
ggplot(data= house_new, aes(x = house_new$waterfront2))+ geom_bar()
ggplot(data = house_new, aes(x = house_new$waterfront2, fill = house_new$air_cond2)) + geom_bar()
ggplot(data = house_new, aes(x = house_new$waterfront2, fill = house_new$air_cond2)) + geom_bar(position = "fill")
for(each in 1:length(house$sewer)){
if(house$sewer[each] == 1){
house$sewer2[each] = "None"
}else if(house$sewer[each] == 2){
house$sewer2[each] = "Private"
}else {
house$sewer2[each] = "Public"
}
}
#waterfront ~ sewer
ggplot(data = house_new, aes(x = house_new$waterfront2, fill = house_new$sewer2)) + geom_bar(position = "fill")
ggplot(data = house_new,
aes(x = house_new$waterfront2, fill = house_new$air_cond2)) +
geom_bar()
ggplot(data = house_new,
aes(x = house_new$waterfront2, fill = house_new$air_cond2)) +
geom_bar(position = "fill")
if(house$sewer[i] == 1){
house$sewer2[i] = "None"
}else if(house$sewer[i] == 2){
house$sewer2[i] = "Private"
}else {
house$sewer2[i] = "Public"
}
for(i in 1:length(house$sewer)){
if(house$sewer[i] == 1){
house$sewer2[i] = "None"
}else if(house$sewer[i] == 2){
house$sewer2[i] = "Private"
}else {
house$sewer2[i] = "Public"
}
}
#waterfront ~ sewer
ggplot(data = house_new, aes(x = house_new$waterfront2, fill = house_new$sewer2)) +
geom_bar(position = "fill")
ggplot(data = house_new, aes(x = house_new$price))+
geom_freqpoly()
ggplot(data = house_new, aes(x = house_new$price))+
geom_freqpoly(bins = 50)
ggplot(data = house_new, aes(x = house_new$price,
col = house_new$air_cond2))+
geom_freqpoly(bins = 100)
x<- c(1, 3,5, 7, 8, 9, 12, 15, 30)
boxplot(x)
ggplot(data = house_new, aes(x = factor(house_new$rooms), y = house_new$price)) +
geom_boxplot()
ggplot(data = house_new,
aes(
x = factor(house_new$rooms),
y = house_new$price,
fill = house_new$air_cond2
)) + geom_boxplot()
ggplot(data = house_new,
aes(
x = factor(house_new$rooms),
y = house_new$price,
fill = house_new$sewer2
)) + geom_boxplot()
##Smooth_line
ggplot(data = house_new, aes(x = house_new$living_area, y = house_new$price)) + geom_smooth()
ggplot(data = house_new, aes(x = house_new$living_area, y = house_new$price, col = house_new$air_cond2)) + geom_smooth()
ggplot(data = house_new,
aes(
x = house_new$living_area,
y = house_new$price,
col = house_new$air_cond2)) +
geom_point() +
geom_smooth(method = "lm", se = F)
##linear model
ggplot(data = house_new, aes(x = house_new$living_area, y = house_new$price)) +
geom_point() +
geom_smooth(method = "lm", se = F)
install.packages("rafalib")
str(mpg)
# aes for x and y... and then use colour, sahpe, class etc.)
ggplot(mpg, aes(x= mpg$displ, y= mpg$hwy,
colour= mpg$class,
shape= mpg$drv,
size=mpg$cyl)) +
geom_point()
# aes for x and y... and then use colour, sahpe, class etc.)
ggplot(mpg, aes(x= mpg$displ, y= mpg$hwy,
colour= mpg$class,
shape= mpg$drv,
size=mpg$cyl)) +
geom_point()
mpg
str(mpg)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour="blue"))
ggplot(mpg, aes(displ, hwy)) +
geom_point(colour="blue")
?mpg
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour="blue"))
ggplot(mpg, aes(displ, hwy)) +
geom_point(colour="blue")
#facet helps to make several plots using particular columns
ggplot(mpg, aes(displ, hwy)) + geom_point()+ facet_wrap(~class)
ggplot(mpg, aes(displ, hwy)) +
geom_point()+
geom_smooth()
ggplot(mpg, aes(displ, hwy)) +
geom_point()+ geom_smooth(span=1)
ggplot(mpg, aes(displ, hwy)) +
geom_point()+
geom_smooth(span=1)
ggplot(mpg, aes(displ, hwy)) +
geom_point()+
geom_smooth()
ggplot(mpg, aes(displ, hwy)) +
geom_point()+
geom_smooth(span=1)
ggplot(mpg, aes(displ, hwy)) +
geom_point()+
geom_smooth(span=5)
ggplot(mpg, aes(displ, hwy)) +
geom_point()+
geom_smooth(span=1)
library(mgcv)
?mgcv
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth(method="gam", formula= y ~s(x))
# give linear model
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth(method= "lm")
ggplot(mpg, aes(drv, hwy))+
geom_point()
ggplot(mpg, aes(drv, hwy))+ geom_jitter()
ggplot(mpg, aes(drv, hwy))+ geom_boxplot()
ggplot(mpg, aes(drv, hwy))+ geom_violin()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter() + geom_dotplot()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter() + geom_point()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter() +geom_pointrange()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter() +geom_count()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter()
ggplot(mpg, aes(drv, hwy))+ geom_violin() + geom_jitter() + geom_count()
ggplot(mpg, aes(hwy)) + geom_histogram()
ggplot(mpg, aes(hwy)) + geom_freqpoly()
## use binwith to change the width
library(rafalib)
library(dplyr)
mypar(1,2)
ggplot(mpg, aes(hwy)) +
geom_freqpoly(binwidth = 2.5)
ggplot(mpg, aes(hwy)) +
geom_freqpoly(binwidth = 1)
ggplot(mpg, aes(displ, colour=drv))+ geom_freqpoly(binwith=0.5)
ggplot(mpg, aes(hwy)) +
geom_freqpoly(binwidth = 2.5)
ggplot(mpg, aes(hwy)) +
geom_freqpoly(binwidth = 1)
ggplot(mpg, aes(displ, colour=drv))+
geom_freqpoly(binwith=0.5)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~drv, ncol = 1)
ggplot(mpg, aes(mpg$manufacturer)) +
geom_bar()
drugs<- data.frame(drug=c("a", "b", "c"),
effect=c(4.2, 9.7, 6.1))
ggplot(drugs, aes(drug, effect)) + geom_bar(stat = "identity")
ggplot(drugs, aes(drug, effect)) + geom_point()
ggplot(economics, aes(date, unemploy / pop)) +
geom_line()
economics
View(economics)
View(economics)
source('~/Desktop/cBALST_R/Day 4-4 July 2020/graph.R', echo=TRUE)
source('~/Desktop/cBALST_R/Day 4-4 July 2020/graph.R', echo=TRUE)
?copd
?copd
help(copd)
